#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

..//libdevcore/Assertions.h
Exceptions.h
../libdevcore/Exceptions.h

..//libdevcore/Common.h
libdevcore/vector_ref.h
-
boost/version.hpp
-
boost_multiprecision_number_compare_bug_workaround.hpp
../libdevcore/boost_multiprecision_number_compare_bug_workaround.hpp
boost/multiprecision/cpp_int.hpp
-
map
-
vector
-
functional
-
string
-

..//libdevcore/CommonData.h
libdevcore/Common.h
-
vector
-
type_traits
-
cstring
-
string
-
set
-

..//libdevcore/CommonIO.h
sstream
-
string
-
Common.h
../libdevcore/Common.h

..//libdevcore/Exceptions.h
boost/exception/exception.hpp
-
boost/exception/info.hpp
-
boost/exception/info_tuple.hpp
-
boost/exception/diagnostic_information.hpp
-
exception
-
string
-

..//libdevcore/vector_ref.h
cstring
-
cassert
-
type_traits
-
vector
-
string
-

..//libevmasm/Instruction.h
functional
-
libdevcore/Common.h
-
libdevcore/Assertions.h
-
Exceptions.h
../libevmasm/Exceptions.h

..//liblll/Compiler.h
string
-
vector
-
libdevcore/Common.h
-

../libdevcore/Common.h
libdevcore/vector_ref.h
-
boost/version.hpp
-
boost_multiprecision_number_compare_bug_workaround.hpp
../libdevcore/boost_multiprecision_number_compare_bug_workaround.hpp
boost/multiprecision/cpp_int.hpp
-
map
-
vector
-
functional
-
string
-

../libdevcore/boost_multiprecision_number_compare_bug_workaround.hpp
boost/mpl/has_xxx.hpp
-
boost/type_traits/conditional.hpp
-
boost/type_traits/is_convertible.hpp
-
boost/multiprecision/detail/number_base.hpp
-
boost/multiprecision/detail/generic_interconvert.hpp
-

../libevmasm/Exceptions.h
libdevcore/Exceptions.h
-

/home/abinesh/shyft_solidity/lllc/main.cpp
fstream
-
iostream
-
clocale
-
liblll/Compiler.h
-
libdevcore/CommonIO.h
-
libdevcore/CommonData.h
-
libevmasm/Instruction.h
-
solidity/BuildInfo.h
-

include/solidity/BuildInfo.h

